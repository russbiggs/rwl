define(function(){"use strict";function e(e){let s=e.slice(0,-2),t=e.slice(-2),n=parseInt(s)+.01*parseFloat(t);return parseFloat(n.toFixed(2))}return function(s){const t={},n=s.split("\n").slice(0,3);t.metadata=function(s){const t={},n=s;t.siteId=n[0].slice(0,6).replace(/\s*/g,"");const c=n[0].slice(9).match(/(\w+)/g);t.siteName=c.slice(0,-1).join(" "),t.speciesCode=c.slice(-1)[0];const i=n[1].slice(9).match(/([\w\-]+)/g);t.state=i[0],t.species=i[1];const o=i[2].match(/\d+/);t.elevation=o[0];const a=i[3].split("-"),r=e(a[1]),l=e(a[0]);t.location={type:"Feature",properties:{},geometry:{type:"Point",coordinates:[r,l]}};const p=i[5];t.firstYear=parseInt(p);let u=i[6];t.lastYear=parseInt(u);let m=n[2].slice(9).match(/\w+/g);return t.leadInvestigator=m.slice(0,2).join(" "),t}(n);const c=s.split("\n").slice(3);return t.samples=function(e){const s=e,t=[];for(const e of s){const s={},n=e.split(/\s+/g);s.sampleId=n[0];const c=n.slice(1),i=parseInt(c.shift()),o=[];for(let e=0;e<c.length;e++){const s={};s.year=i+e,s.width=parseInt(c[e]),o.push(s)}s.measurements=o,t.push(s)}const n=t.reduce((e,s)=>(e[s.sampleId]=e[s.sampleId]||[],e[s.sampleId].push(...s.measurements),e),{}),c=[];for(const e in n)c.push({sampleId:e,measurements:n[e]});return c}(c),JSON.stringify(t)}});